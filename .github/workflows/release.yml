name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build for Linux 64-bit
      run: dotnet publish ./src/Hamzaman.csproj -c Release -r linux-x64 --self-contained true -o ./output/linux/x64

    - name: Build for Linux musl 64-bit
      run: dotnet publish ./src/Hamzaman.csproj -c Release -r linux-musl-x64 --self-contained true -o ./output/linux/muslx64

    - name: Zip Linux 64-bit output
      run: |
        cd ./output/linux/x64
        VERSION=${GITHUB_REF#refs/tags/v}
        mv Hamzaman hamzaman
        chmod +x hamzaman
        find . -type f -name "*.br" -exec rm -f {} +
        find . -type f -name "*.gz" -exec rm -f {} +
        zip -r ../../../output/Release_v${VERSION}_linux_x64.zip hamzaman appsettings.json wwwroot

    - name: Zip Linux musl 64-bit output
      run: |
        cd ./output/linux/muslx64
        VERSION=${GITHUB_REF#refs/tags/v}
        mv Hamzaman hamzaman
        chmod +x hamzaman
        find . -type f -name "*.br" -exec rm -f {} +
        find . -type f -name "*.gz" -exec rm -f {} +
        zip -r ../../../output/Release_v${VERSION}_linux_musl_x64.zip hamzaman appsettings.json wwwroot

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-artifacts
        path: ./output/Release_*.zip


  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build for macOS 64-bit
      run: dotnet publish ./src/Hamzaman.csproj -c Release -r osx-x64 --self-contained true -o ./output/macos/x64

    - name: Zip macOS 64-bit output
      run: |
        cd  ./output/macos/x64
        VERSION=${GITHUB_REF#refs/tags/v}
        mv Hamzaman hamzaman
        chmod +x hamzaman
        find . -type f -name "*.br" -exec rm -f {} +
        find . -type f -name "*.gz" -exec rm -f {} +
        zip -r ../../../output/Release_v${VERSION}_macos_x64.zip hamzaman appsettings.json wwwroot

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-artifacts
        path: ./output/Release_*.zip


  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build for Windows 64-bit
      run: dotnet publish ./src/Hamzaman.csproj -c Release -r win-x64 --self-contained true -o ./output/windows/x64

    - name: Build for Windows 32-bit
      run: dotnet publish ./src/Hamzaman.csproj -c Release -r win-x86 --self-contained true -o ./output/windows/x86

    - name: Zip Windows 64-bit output
      run: |
        cd ./output/windows/x64
        $VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
        Get-ChildItem -Path . -Filter *.br -Recurse | Remove-Item -Force
        Get-ChildItem -Path . -Filter *.gz -Recurse | Remove-Item -Force
        Compress-Archive -Path "Hamzaman.exe", "appsettings.json", "wwwroot" -DestinationPath "../../../output/Release_v${VERSION}_windows_x64.zip"

    - name: Zip Windows 32-bit output
      run: |
        cd ./output/windows/x86
        $VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
        Get-ChildItem -Path . -Filter *.br -Recurse | Remove-Item -Force
        Get-ChildItem -Path . -Filter *.gz -Recurse | Remove-Item -Force
        Compress-Archive -Path "Hamzaman.exe", "appsettings.json", "wwwroot" -DestinationPath "../../../output/Release_v${VERSION}_windows_x86.zip"

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-artifacts
        path: ./output/Release_*.zip


  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-artifacts

    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-artifacts

    - name: Create version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION<<EOF" >> $GITHUB_ENV
        echo $VERSION >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        body: |
            Version ${{ env.VERSION }}
        files: |
          ./Release_v*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}